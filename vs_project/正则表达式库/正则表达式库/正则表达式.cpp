//限定符
//$		匹配输入字符串的结尾位置。	
//(,)		标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。
//*		匹配前面的子表达式零次或多次。
//+		匹配前面的子表达式一次或多次。
//.		匹配除换行符 \n 之外的任何单字符。
//[		标记一个中括号表达式的开始。
//?		匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。
//\		将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， n 匹配字符 n。\n 匹配换行符。序列 \\ 匹配 '\' 字符，而 \( 则匹配 '(' 字符。
//^		匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。
//{		标记限定符表达式的开始。
//|		指明两项之间的一个选择。

//限定符
//*			匹配前面的子表达式零次或多次。例如，foo* 能匹配 fo 以及 foooo。* 等价于{ 0, }。
//+			匹配前面的子表达式一次或多次。例如，foo + 能匹配 foo 以及 foooo，但不能匹配 fo。 + 等价于{ 1, }。
//?			匹配前面的子表达式零次或一次。例如，Your(s) ? 可以匹配 Your 或 Yours 中的Your 。 ? 等价于{ 0,1 }。
//{ n }		n 是一个非负整数。匹配确定的 n 次。例如，f{ 2 } 不能匹配 for 中的 o，但是能匹配 foo 中的两个 o。
//{ n, }	n 是一个非负整数。至少匹配 n 次。例如，f{ 2, } 不能匹配 for 中的 o，但能匹配 foooooo 中的所有 o。o{ 1, } 等价于 o + 。o{ 0, } 则等价于 o*。
//{ n,m }	m 和 n 均为非负整数，其中 n 小于等于 m。最少匹配 n 次且最多匹配 m 次。例如，o{ 1,3 } 将匹配 foooooo 中的前三个 o。o{ 0,1 } 等价于 o ? 。注意，在逗号和两个数之间不能有空格。